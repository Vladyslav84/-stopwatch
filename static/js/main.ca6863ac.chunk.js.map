{"version":3,"sources":["Stopwatch/StopwatchRx.jsx","index.js","Stopwatch/stopwatch.module.css"],"names":["Stopwatch","useState","time","setTime","timerOn","setTimeOn","toggleStartStop","settoggleStartStop","pad","value","String","padStart","hours","Math","floor","mins","secs","useEffect","clicks","fromEvent","document","getElementById","pipe","buffer","throttleTime","map","arr","length","filter","len","subscribe","interval","Observable","obs","setInterval","next","val","prevTime","clearInterval","className","s","container","timer","timer_block","title","buttons","type","button","onClick","id","ReactDOM","render","StrictMode","StopwatchRx","module","exports"],"mappings":"yOA8FeA,MAzFf,WACI,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA6BF,oBAAS,GAAtC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8CJ,oBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KAEA,SAASC,EAAIC,GAAS,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KACvD,IAAMC,EAAQJ,EAAIK,KAAKC,MAAOZ,EAAI,MAAL,OACvBa,EAAOP,EAAIK,KAAKC,MAAOZ,EAAI,KAAL,MACtBc,EAAOR,EAAIK,KAAKC,MAAOZ,EAAI,IAAkB,MAsDnD,OA9BAe,qBAAU,WACV,IAAMC,EAASC,YAAUC,SAASC,eAAe,WAAY,SAC9CH,EAAOI,KACtBC,YAAOL,EAAOI,KAAKE,YAAa,OAChCC,aAAI,SAAAC,GAAG,OAAIA,EAAIC,UACfC,aAAQ,SAAAC,GAAG,OAAY,IAARA,MAGRC,WAAU,WAlBbvB,GAAmB,GACnBF,GAAU,QAmBZ,IAGEY,qBAAU,WACV,IAAIc,EAAW,KAEX3B,EACkB,IAAI4B,KAAW,SAAAC,GAC7B,OAAOF,EAAWG,aAAY,kBAAMD,EAAIE,KAAK,OAAO,QAE7CL,WACP,SAACM,GAAD,OAASjC,GAAQ,SAAAkC,GAAQ,OAAIA,EAAWD,QAG5CE,cAAcP,GAGlB,OAAO,kBAAMO,cAAcP,MAC7B,CAAC3B,IAGC,sBAAKmC,UAAWC,IAAEC,UAAlB,UACI,sBAAKF,UAAWC,IAAEE,MAAlB,UACI,sBAAKH,UAAWC,IAAEG,YAAlB,UACI,qBAAKJ,UAAWC,IAAEtC,KAAlB,SAAyBU,IACzB,qBAAK2B,UAAWC,IAAEI,MAAlB,mBAGJ,sBAAKL,UAAWC,IAAEG,YAAlB,UACI,qBAAKJ,UAAWC,IAAEtC,KAAlB,SAAyBa,IACzB,qBAAKwB,UAAWC,IAAEI,MAAlB,mBAGJ,sBAAKL,UAAWC,IAAEG,YAAlB,UACI,qBAAKJ,UAAWC,IAAEtC,KAAlB,SAAyBc,IACzB,qBAAKuB,UAAWC,IAAEI,MAAlB,sBAGR,sBAAKL,UAAWC,IAAEK,QAAlB,UACI,wBAAQC,KAAK,SAASP,UAAWC,IAAEO,OAAQC,QAvEvD,WACS1C,EAGMF,GAAWE,IAClBD,GAAU,GACVE,GAAmB,GACnBJ,EAAQ,KALRE,GAAU,GACVE,GAAmB,KAoEf,wBACA,wBAAQuC,KAAK,SAASG,GAAG,UAAUV,UAAWC,IAAEO,OAAhD,kBACA,wBAAQD,KAAK,SAASP,UAAaC,IAAEO,OAAQC,QAzDzD,WACI7C,EAAQ,GACRE,GAAU,GACVE,GAAmB,IAsDX,0BCnFhB2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFjC,SAASC,eAAe,U,kBCR1BiC,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,YAAc,+BAA+B,QAAU,2BAA2B,OAAS,6B","file":"static/js/main.ca6863ac.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport s from './stopwatch.module.css'\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { map, throttleTime, buffer, filter } from 'rxjs/operators';\r\n\r\nfunction Stopwatch() {\r\n    const [time, setTime] = useState(0);\r\n    const [timerOn, setTimeOn] = useState(false);\r\n    const [toggleStartStop, settoggleStartStop] = useState(false);\r\n\r\n    function pad(value) { return String(value).padStart(2, '0') };\r\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    function toggleStartStopFunc () {\r\n        if (!toggleStartStop) {\r\n            setTimeOn(true)\r\n            settoggleStartStop(true)\r\n        } else if (timerOn && toggleStartStop) {\r\n            setTimeOn(false)\r\n            settoggleStartStop(false)\r\n            setTime(0)\r\n        }\r\n    };\r\n\r\n    function waitFunc() {\r\n        settoggleStartStop(false)\r\n        setTimeOn(false)\r\n    };\r\n\r\n    function resetFunc() {\r\n        setTime(0)\r\n        setTimeOn(true)\r\n        settoggleStartStop(true)\r\n    };\r\n\r\n    useEffect(() => {\r\n    const clicks = fromEvent(document.getElementById('clickMe'), 'click');\r\n    const result = clicks.pipe(\r\n    buffer(clicks.pipe(throttleTime(300))),\r\n    map(arr => arr.length),\r\n    filter( len => len === 2)\r\n        );\r\n\r\n    result.subscribe(()=>{waitFunc()});\r\n       \r\n    },[])\r\n    \r\n// useeffect for Observable\r\n        useEffect(() => {\r\n        let interval = null;\r\n\r\n        if (timerOn) {\r\n           const timerStrim = new Observable(obs => {\r\n                return interval = setInterval(() => obs.next(1000), 1000);\r\n           })\r\n            timerStrim.subscribe(\r\n                (val) => setTime(prevTime => prevTime + val), \r\n              );\r\n        } else {\r\n            clearInterval(interval)\r\n        }\r\n                \r\n        return () => clearInterval(interval)\r\n    },[timerOn])\r\n   \r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.timer}>\r\n                <div className={s.timer_block}>\r\n                    <div className={s.time}>{hours}</div>\r\n                    <div className={s.title}>HH</div>\r\n                </div>\r\n              \r\n                <div className={s.timer_block}>\r\n                    <div className={s.time}>{mins}</div>\r\n                    <div className={s.title}>MM</div>\r\n                </div>\r\n\r\n                <div className={s.timer_block}>\r\n                    <div className={s.time}>{secs}</div>\r\n                    <div className={s.title}>SS</div>\r\n                </div>\r\n            </div>\r\n            <div className={s.buttons}>\r\n                <button type='button' className={s.button} onClick = {toggleStartStopFunc}>Start/Stop</button>\r\n                <button type='button' id=\"clickMe\" className={s.button} >Wait</button>\r\n                <button type='button' className = {s.button} onClick={resetFunc} >Reset</button>\r\n            </div>\r\n    </div>)\r\n    \r\n}\r\n\r\nexport default Stopwatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Stopwatch from '../src/Stopwatch/stopwatch.jsx'\nimport StopwatchRx from '../src/Stopwatch/StopwatchRx'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StopwatchRx />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"stopwatch_container__VlvDT\",\"timer\":\"stopwatch_timer__1Cr_z\",\"timer_block\":\"stopwatch_timer_block__1gPAN\",\"buttons\":\"stopwatch_buttons__3iSTu\",\"button\":\"stopwatch_button__2cLBL\"};"],"sourceRoot":""}